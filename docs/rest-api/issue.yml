openapi: 3.0.0
info:
  title: Issue Management System API
  version: 1.0.0
paths:
  /api/issue:
    post:
      summary: Create a new issue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
      responses:
        '201':
          description: Issue created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
    get:
      summary: Get a list of issues
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search for issues by title
        - in: query
          name: status
          schema:
            type: string
            enum: [Open, In Progress, Closed]
          description: Filter issues by status
        - in: query
          name: assignedTo
          schema:
            type: string
          description: Filter issues by assignee
      responses:
        '200':
          description: A list of issues
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
  /api/issue/{id}:
    get:
      summary: Get a specific issue
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A specific issue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
    put:
      summary: Update a specific issue
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
      responses:
        '200':
          description: Issue updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
    delete:
      summary: Delete a specific issue
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Issue deleted
  /api/issue/{id}/status:
    put:
      summary: Change the status of a specific issue
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [Open, In Progress, Closed]
      responses:
        '200':
          description: Status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
components:
  schemas:
    Issue:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [Open, In Progress, Closed]
        creator:
          type: string
        assignee:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        issueId:
          type: integer
        commenter:
          type: string